@using AMS.Areas.Configuration.Models.Tables
@model TableData

<div class="card card-custom gutter-r">
    <div class="card-header d-flex justify-content-between">
        <h3 class="card-title">@Model.Title</h3>
        <div class="card-toolbar">
            <a onclick="create('@((int)Model.Table)', '@Model.Title')" class="btn btn-primary">@Resource.Add</a>
        </div>
    </div>

    <div class="card-body animate">
        <table id="tbl_table_data" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>@Resource.NameSq</th>
                    <th>@Resource.NameEn</th>
                    <th data-orderable="false">@Resource.Active</th>
                    <th data-orderable="false">@Resource.Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@Html.AntiForgeryToken()

<script>
    $(document).ready(function() {
        render_tbl(@Html.Raw(Json.Serialize(Model.DataList)));
    });

    function render_tbl(data) {
        var rowCount = 1;

        $('#tbl_table_data').DataTable({
            destroy: true,
            language: {
                url: `/Culture/DataTable/${culture}.json`
            },
            keys: true,
            responsive: true,
            pageLength: 10,
            data: data,
            columnDefs: [
                { targets: [0, 4], width: "5%" },
                { targets: [3], width: "15%" },
                { targets: [3], className: "text-center" },
                { targets: [4], className: "button-td text-center" },
                { targets: "_all", defaultContent: "///" }
            ],
            order: [[0, "asc"]],
            columns: [
                {
                    data: function(data, type, row, meta) {
                        rowCount++;
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { data: "nameSQ" },
                { data: "nameEN" },
                {
                    data: function(row, type, set) {
                        var isActive = row.active ? "checked" : "";
                        return '<label class="d-inline m-0">' +
                               '<input style="cursor: pointer;" type="checkbox" id="' + row.ide + '" ' + isActive + '>' +
                               '<label for="' + row.ide + '" onclick="change_active(\'' + row.ide + '\',\'' + '@((int)Model.Table)' + '\', this)" style="margin: auto;"></label>' +
                               '</label>';
                    }
                },
                {
                    data: function(row, type, set) {
                        return '<div class="dropdown dropleft cursor-pointer">' +
                            '<button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                            '<div class="dropdown-menu dropdown-grid" role="menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 29px, 0px); top: 0px; left: 0px; will-change: transform;">' +
                            '<button class="dropdown-item cursor-pointer" type="button" class="dropdown-item" onclick="edit(\'' + row.ide + '\',\'' + '@((int)Model.Table)' + '\',\'' + '@Model.Title' + '\')">@Html.Raw(ActionButton.Edit.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Edit</span></button>' +
                            '</div></div>';
                    }
                }
            ]
        });
    }

    function load_more(e) {
        $(e).parent().find('.load-less-fst').removeClass('d-none');
        $(e).parent().parent().find('.load-less-snd').removeClass('d-none');
        $(e).addClass('d-none');
    }

    function load_less(e) {
        $(e).addClass('d-none');
        $(e).parent().addClass('d-none');
        $(e).parent().parent().find('.load-more').removeClass('d-none');
    }

    function change_active(ide, tbl, e) {
        $.post('@Url.Action("Delete", "Tables")', {
            table: tbl,
            ide: ide,
            active: !$('input[id="' + ide + '"]').is(":checked"),
            __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
        }, function(data) {
            handle_success(data, SubmitPathType.NORELOAD, "");
        });
    }

    function edit(ide, tbl, title) {
        $('#modal-large').find('.modal-content').load('@Url.Action("_Edit", "Tables")', {
            table: tbl,
            title: title,
            ide: ide
        }, function () {
            sessionStorage.setItem("tbl_enum", tbl);
            sessionStorage.setItem("tbl_title", title);

            $('#modal-large').modal('toggle');
        });
    }

    function create(tbl, title) {
        $('#modal-large').find('.modal-content').load('@Url.Action("_Create", "Tables")', {
            table: tbl,
            title: title
        }, function () {
            sessionStorage.setItem("tbl_enum", tbl);
            sessionStorage.setItem("tbl_title", title);

            $('#modal-large').modal('toggle');
        });
    }
</script>