@using AMS.Areas.Authorization.Models.Menu
@model IEnumerable<MenuVM>
@{
    Layout = null;
}

<div class="card card-custom">
    <div class="card-header d-flex justify-content-between">
        <h3 class="card-title"> @Resource.ListOfMenus</h3>
        <div class="card-toolbar">
            <button class="btn btn-primary" type="button" onclick="create_menu()">@Resource.AddMenu</button>
        </div>
    </div>
    <div class="card-body">
        <table id="tbl_Menu" class="table table-striped table-bordered w-100 table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>@Resource.MenuName</th>
                    <th>@Resource.Icon</th>
                    <th>@Resource.Controller</th>
                    <th>@Resource.Action</th>
                    <th class="text-center" style="width: 10% !important;" data-orderable="false">@Resource.Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>

<script>
    $(document).ready(function() {
        render_MenuTbl(@Json.Serialize(Model));
    });

    function create_menu() {
        $('#modal-large').find('.modal-content').load('@Url.Action("_Create", "Menu")', function () {
            $('#modal-large').modal('toggle');
        });
    }

    function render_MenuTbl(data) {
        $('#tbl_Menu').DataTable({
            language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
            keys: true,
            responsive: true,
            data: data,
            order: [[0, "asc"]],
            columnDefs: [
                { targets: [5], width: '5%' },
                { targets: [0, 5], searchable: false },
                { targets: [5], className: 'button-td text-center' }
            ],
            columns: [
                {
                    data: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { data: "title" },
                {
                    data: function (row, type, set) {
                        return `<i class="${row.icon}"></i> (${row.icon})`;
                    }
                },
                { data: "controller" },
                { data: "action" },
                {
                    data: function (row, type, set) {
                        var dropdown = '<div class="dropdown dropleft cursor-pointer">' +
                            '<button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                            '<div class="dropdown-menu dropdown-grid" role="menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 29px, 0px); top: 0px; left: 0px; will-change: transform;">';
                        if (row.hasSubMenu) {
                            dropdown += '<button class="dropdown-item cursor-pointer" type="button" class="dropdown-item" onclick="add_submenu(\'' + row.menuIde + '\')">@Html.Raw(ActionButton.Plus.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Html.Raw(Resource.AddSubMenu)</span></button>';
                        }
                        dropdown += '<button class="dropdown-item cursor-pointer" type="button" class="dropdown-item" onclick="edit(\'' + row.menuIde + '\')">@Html.Raw(ActionButton.Edit.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Edit</span></button>' +
                            '<button class="dropdown-item cursor-pointer" type="button" class="dropdown-item" onclick="delete_menu(\'' + row.menuIde + '\')">@Html.Raw(ActionButton.Delete.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Delete</span></button>' +
                            '</div></div>';
                        return dropdown;
                    }
                }
            ]
        });
    }

    function add_submenu(ide) {
        $('#modal-center-xlarge').find('.modal-content').load('@Url.Action("_Create", "SubMenu")?ide=' + ide, function () {
            $('#modal-center-xlarge').modal('toggle');
        });
    }

    function edit(ide) {
        $('#modal-center-xlarge').find('.modal-content').load('@Url.Action("_Edit", "Menu")?ide=' + ide, function () {
            $('#modal-center-xlarge').modal('toggle');
        });
    }

    function delete_menu(ide) {
        Swal.fire({
            title: "@Html.Raw(Resource.AreYouSure)",
            text: "@Html.Raw(Resource.SureYouWantToDeleteMenu)",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: "@Resource.Yes",
            cancelButtonText: "@Resource.No"
        }).then((result) => {
            if (result.value) {
                $.post('@Url.Action("Delete", "Menu")', {
                    ide: ide,
                    __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                    }, function (data) {
                        handle_success(data, SubmitPathType.RELOAD, "");
                });
            }
        });
    }
</script>
