@using AMS.Areas.Authorization.Models.SubMenu
@model Create

<div class="modal-header">
    <h5 class="modal-title">@string.Format(Resource.AddSubMenuFor, Model.MenuTitle)</h5>
    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki ki-close"></i>
    </button>
</div>

<form asp-action="Create" asp-controller="SubMenu" asp-area="Authorization" id="frm_CreateSubMenu" method="post" data-ajax="true" data-ajax-method="post" data-ajax-success="on_success_submenu" role="form">
    <div class="modal-body">
        @Html.AntiForgeryToken()
        <input asp-for="MenuIde" type="hidden" />

        <div class="row">
            <div class="col-md-4 form-group">
                <label asp-for="NameSq" class="required"></label>
                <input asp-for="NameSq" class="form-control" />
                <span asp-validation-for="NameSq" class="text-danger"></span>
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="NameEn" class="required"></label>
                <input asp-for="NameEn" class="form-control" />
                <span asp-validation-for="NameEn" class="text-danger"></span>
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="Area"></label>
                <input asp-for="Area" class="form-control" />
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="Controller"></label>
                <input asp-for="Controller" class="form-control" />
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="Action"></label>
                <input asp-for="Action" class="form-control" />
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="OrdinalNumber" class="required"></label>
                <input asp-for="OrdinalNumber" type="number" class="form-control" />
                <span asp-validation-for="OrdinalNumber" class="text-danger"></span>
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="ClaimPolicy"></label>
                <input asp-for="ClaimPolicy" class="form-control" />
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="Icon"></label>
                <div class="input-group">
                    <input asp-for="Icon" class="form-control" />
                    <div class="input-group-append"><span class="input-group-text"><i id="kt_icon" class="fas fa-code"></i></span></div>
                </div>
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="OpenFor"></label>
                <input asp-for="OpenFor" class="form-control" />
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-6">
                <label asp-for="TagsSQ"></label>
                <input asp-for="TagsSQ" name="basic" id="txt_tags_sq" class="tagify form-control" />
            </div>
            <div class="col-md-6">
                <label asp-for="TagsEN"></label>
                <input asp-for="TagsEN" name="basic" id="txt_tags_en" class="tagify form-control" />
            </div>
        </div>
        <div class="separator separator-solid mb-5"></div>

        @if (Model.HasSubMenu)
        {
            <div class="accordion accordion-light accordion-toggle-arrow mb-5" id="kt_submenus">
                <div class="card">
                    <div class="card-header">
                        <div class="card-title collapsed" data-toggle="collapse" data-target="#kt_submenu_list">
                            @Resource.ListSubMenus
                        </div>
                    </div>
                    <div id="kt_submenu_list" class="mt-4 collapse" data-parent="#kt_submenus">
                        <div class="card-body" id="kt_submenu_data">
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="modal-footer justify-content-between">
        <button type="button" class="btn btn-bold btn-pure btn-secondary" data-bs-dismiss="modal">@Resource.Close</button>
        <button type="submit" class="btn btn-bold btn-pure btn-primary float-right">@Resource.Add</button>
    </div>
</form>

<div>

</div>

<script>
    $(document).ready(function () {
        var form = $('#frm_CreateSubMenu');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);

        $('#kt_submenu_data').load('@Url.Action("SubMenu", "Submenu")?mIde=@Model.MenuIde');

        $('#Icon').on('change', function () {
            if ($(this).val() != null && $(this).val() != '') {
                $('#kt_icon').removeClass('fas fa-code').addClass($(this).val());
            } else {
                $('#kt_icon').addClass('fas fa-code');
            }
        });

        KTTagify.init();
    });

    var KTTagify = function () {
        var init_tagify = function () {
            var input_sq = document.getElementById('txt_tags_sq');
            var input_en = document.getElementById('txt_tags_en');

            var tagify_sq = new Tagify(input_sq, {
                delimiters: ",",
                transformTag: transform_tag,
                originalInputValueFormat: valuesArr => valuesArr.map(a => a.value).join(',')
            });

            var tagify_en = new Tagify(input_en, {
                delimiters: ",",
                transformTag: transform_tag,
                originalInputValueFormat: valuesArr => valuesArr.map(a => a.value).join(',')
            });

            function transform_tag(tagData) {
                var states = [
                    'success',
                    'primary',
                    'danger',
                    'warning',
                    'dark',
                    'primary',
                    'info'
                ];

                tagData.class = 'tagify__tag tagify__tag--' + states[KTUtil.getRandomInt(0, 7)];
            }
        }

        return {
            init: function () {
                init_tagify();
            }
        }
    }();

    function on_success_submenu(data) {
        handle_success(data, SubmitPathType.RELOAD, "");
    }
</script>
