@using AMS.Areas.Administration.Models.Roles
@model IEnumerable<RoleVM>
@{
    ViewData["Title"] = Resource.Roles;
}

<div class="card card-custom gutter-b">
    <div class="card-header">
        <h3 class="card-title">@Resource.Roles</h3>
        <div class="card-toolbar">
            <button onclick="create_role()" class="btn btn-primary float-right">@Resource.AddRole</button>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-striped table-bordered table-hover w-100" id="tbl_roles">
            <thead>
                <tr>
                    <th>#</th>
                    <th>@Resource.NormalizedName</th>
                    <th>@Resource.NameSq</th>
                    <th>@Resource.NameEn</th>
                    <th>@Resource.Description</th>
                    <th data-orderable="false">@Resource.Actions</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            render_table(@Json.Serialize(Model));
        });

        function render_table(data) {
            $('#tbl_roles').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 15,
                data: data,
                deferRender: true,
                columnDefs: [
                    { targets: [0, 5], width: "5%" },
                    { targets: [5], className: "button-td text-center" },
                    { targets: "_all", defaultContent: "///" }
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { data: "normalizedName" },
                    { data: "nameSQ" },
                    { data: "nameEN" },
                    {
                        data: function (row, type, set) {
                            var desc = '///';
                            if (row.description != null) {
                                if (row.description.length > 80) {
                                    desc = row.description.substring(0, 80) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.description.substring(80) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                                } else {
                                    desc = row.description ?? "///";
                                }
                            }
                            return desc;
                        }
                    },
                    {
                        data: function (row, type, set) {
                            return '<div class="dropdown dropleft cursor-pointer">' +
                                '<button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu" role="menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 29px, 0px); top: 0px; left: 0px; will-change: transform;">' +
                                '<button class="dropdown-item cursor-pointer" type="button" onclick="edit_role(\'' + row.roleIde + '\')">@Html.Raw(ActionButton.Edit.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Edit</span></button>' +
                                '<button class="dropdown-item cursor-pointer" type="button" onclick="delete_role(\'' + row.roleIde + '\')">@Html.Raw(ActionButton.Delete.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Delete</span></button>' +
                                '</div></div>';
                        }
                    }
                ]
            });
        }

        function load_more(e) {
            $(e).parent().find('.load-less-fst').removeClass('d-none');
            $(e).parent().parent().find('.load-less-snd').removeClass('d-none');
            $(e).addClass('d-none');
        }

        function load_less(e) {
            $(e).addClass('d-none');
            $(e).parent().addClass('d-none');
            $(e).parent().parent().find('.load-more').removeClass('d-none');
        }

        function create_role(ide) {
            $('#modal-large').find('.modal-content').load('@Url.Action("Create", "Roles")?ide=' + ide, function () {
                $('#modal-large').modal('toggle');
            });
        }

        function edit_role(ide) {
            $('#modal-large').find('.modal-content').load('@Url.Action("Edit", "Roles")?ide=' + ide, function () {
                $('#modal-large').modal('toggle');
            });
        }

        function delete_role(ide) {
            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteRole)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("Delete", "Roles")', {
                        ide: ide,
                        __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                    }, function (data) {
                        handle_success(data, SubmitPathType.RELOAD, "");
                    });
                }
            });
        }
    </script>
}
