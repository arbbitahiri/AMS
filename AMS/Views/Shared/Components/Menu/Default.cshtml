@using AMS.Models.Menu
@model IEnumerable<MenuVM>
@{
    var controller = this.ViewContext.RouteData.Values["controller"] ?? "";
    var action = this.ViewContext.RouteData.Values["action"] ?? "";
    var area = this.ViewContext.RouteData.Values["area"] ?? "";
    var testime = "";
}

<ul class="menu-nav">
    @foreach (var menu in Model)
    {
        <li class="menu-item @(menu.HasSubMenu ? "menu-item-submenu" :"") menu-item-rel @(menu.Controller == (string)controller && menu.OpenFor.Split(",").Contains((string)action) ? "menu-item-active menu-item-open" :"")" aria-haspopup="true" @(menu.HasSubMenu ? "data-menu-toggle=click" : "")>
            <a href="@Url.Action(menu.Action, menu.Controller, new { area = menu.Area })" class="menu-link @(menu.HasSubMenu ? "menu-toggle" :"")">
                <i class="@menu.Icon menu-icon mr-3"></i>
                <span class="menu-text">@menu.Title</span>
                @if (menu.HasSubMenu)
                {
                    <i class="menu-arrow"></i>
                }
            </a>
            @if (menu.SubMenus.Any(t => t.SubMenuId != null))
            {
                <div class="menu-submenu menu-submenu-classic menu-submenu-left">
                    <ul class="menu-subnav">
                        @foreach (var submenu in menu.SubMenus)
                        {
                            <li class="@(submenu.Controller == (string)controller && submenu.OpenFor.Split(",").Contains((string)action) ? "menu-item-active menu-item-open" :"") menu-item" aria-haspopup="true">
                                <a asp-action="@submenu.Action" asp-controller="@submenu.Controller" asp-area="@submenu.Area" class="menu-link">
                                    <i class="@submenu.Icon menu-icon"></i>
                                    <span class="menu-text">@submenu.Title</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </li>
    }
</ul>
