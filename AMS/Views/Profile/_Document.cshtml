@using AMS.Models.Profile
@model DocumentVM
@{
}
<input asp-for="StaffIde" type="hidden" />
<div class="d-flex justify-content-between align-items-center my-5">
    <h3 class="card-title font-weight-bolder text-dark-75 text-hover-primary font-size-h4 m-0">@Resource.Documents</h3>
    @if (User.HasClaim("7d", "c"))
    {
        <button onclick="add_document('@Model.StaffIde')" class="btn btn-primary btn-pure float-right">@Resource.AddDocument</button>
    }
</div>
<table id="tbl_document" class="table table-striped table-bordered table-hover">
    <thead>
        <tr>
            <th width="5%">#</th>
            <th width="15%">@Resource.Title</th>
            <th width="15%">@Resource.DocumentType</th>
            <th width="15%">@Resource.Download</th>
            <th width="40%">@Resource.Description</th>
            <th width="10%" class="text-center" data-orderable="false">@Resource.Actions</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<script>
    $(document).ready(function () {
        render_attendance_tbl(@Json.Serialize(Model.Documents));
    });

    function render_attendance_tbl(data) {
        var row_c = 1;
        var has_claim_edit = '@User.HasClaim("7d", "e")' == 'True' ? true : false;
        var has_claim_delete = '@User.HasClaim("7d", "d")' == 'True' ? true : false;
        var has_claim = has_claim_edit || has_claim_delete;

        $('#tbl_document').DataTable({
            destroy: true,
            language: {
                url: `/Culture/DataTable/${culture}.json`
            },
            keys: true,
            responsive: true,
            pageLength: 20,
            data: data,
            deferRender: true,
            columnDefs: [
                { width: "5%", targets: [0, 3, 5] },
                { width: "30%", targets: [4] },
                { className: "text-center button-td", targets: [3, 5] },
                { visible: has_claim, targets: [5] },
                { defaultContent: "///", targets: "_all" }
            ],
            order: [[0, "asc"]],
            columns: [
                {
                    data: function (data, type, row, meta) {
                        row_c++;
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { data: "title" },
                { data: "documentType" },
                {
                    data: function (row, type, set) {
                        return '<a onclick="download_doc(\'' + row.staffDocumentIde + '\', \'' + row.pathExtension + '\')" href="' + row.path + '" download="' + row.title + '" target="_blank" class="btn btn-icon btn-success btn-circle mr-2"><i class="fas fa-arrow-down"></i></a>'
                    }
                },
                {
                    data: function (row, type, set) {
                        var desc = '///';
                        if (row.description != null) {
                            if (row.description.length > 80) {
                                desc = row.description.substring(0, 80) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.description.substring(80) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                            } else {
                                desc = row.description ?? "///";
                            }
                        }
                        return desc;
                    }
                },
                {
                    data: function (row, type, set) {
                        var dropdown = '<div class="dropdown dropleft cursor-pointer">' +
                            '<button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                            '<div class="dropdown-menu dropdown-grid" role="menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 29px, 0px); top: 0px; left: 0px; will-change: transform;">';
                        if (has_claim_edit) {
                            dropdown += '<button type="button" class="dropdown-item cursor-pointer" onclick="edit_document(\'' + row.staffDocumentIde + '\')">@Html.Raw(ActionButton.Edit.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Edit</span></button>';
                        }

                        if (has_claim_delete) {
                            dropdown += '<button type="button" class="dropdown-item cursor-pointer" onclick="delete_document(\'' + row.staffDocumentIde + '\')">@Html.Raw(ActionButton.Delete.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Delete</span></button>';
                        }
                        dropdown += '</div></div>';
                        return dropdown;
                    }
                }
            ]
        });
    }

    function load_more(e) {
        $(e).parent().find('.load-less-fst').removeClass('d-none');
        $(e).parent().parent().find('.load-less-snd').removeClass('d-none');
        $(e).addClass('d-none');
    }

    function load_less(e) {
        $(e).addClass('d-none');
        $(e).parent().addClass('d-none');
        $(e).parent().parent().find('.load-more').removeClass('d-none');
    }

    function download_document(ide, path_ext) {
        if (path_ext.contains(".pdf")) {
            window.open('@Url.Action("OpenDocument", "Profile")?ide=' + ide, '_blank');
        }
    }

    function add_document(ide) {
        $('#modal-large').find('.modal-content').load('@Url.Action("_AddDocument", "Staff")?ide=' + ide, function () {
            $('#modal-large').modal('toggle');
        });
    }

    function edit_document(ide) {
        $('#modal-large').find('.modal-content').load('@Url.Action("_EditDocument", "Staff")?ide=' + ide, function () {
            $('#modal-large').modal('toggle');
        });
    }

    function delete_document(ide) {
        Swal.fire({
            title: "@Html.Raw(Resource.AreYouSure)",
            text: "@Html.Raw(Resource.SureYouWantToDeleteDocument)",
            icon: "question",
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: "@Resource.Yes",
            cancelButtonText: "@Resource.No"
        }).then((result) => {
            if (result.value) {
                $.post('@Url.Action("DeleteDocument", "Staff")', {
                    ide: ide,
                    __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                }, function (data) {
                    handle_success(data, SubmitPathType.RELOAD, "");
                });
            }
        });
    }
</script>
