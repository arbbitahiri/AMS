@using AMS.Models.Document
@model Create
@inject IDDLRepository repo
@{
    UserModel user = (UserModel)ViewData["User"];
}

<div class="modal-header">
    <h5 class="modal-title">@Resource.AddDocument</h5>
    <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
        <i aria-hidden="true" class="ki ki-close"></i>
    </button>
</div>

<form asp-action="Create" asp-controller="Document" id="frm_create_document" method="post" data-ajax="true" data-ajax-method="post" data-ajax-success="success_create_document" role="form">
    <div class="modal-body">
        @Html.AntiForgeryToken()

        <div class="row pl-2 pr-2">
            <div class="col-md-6 form-group">
                <label asp-for="StaffId" class="required"></label>
                <select asp-for="StaffId" class="form-control select2">
                    <option value="">@Resource.Choose</option>
                </select>
                <span asp-validation-for="StaffId" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-group">
                <label asp-for="DocumentTypeId" class="required"></label>
                <select asp-for="DocumentTypeId" asp-items="await repo.DocumentTypes(user.Language)" class="form-control select2">
                    <option value="">@Resource.Choose</option>
                </select>
                <span asp-validation-for="DocumentTypeId" class="text-danger"></span>
            </div>
            <div class="col-md-6 form-group">
                <label asp-for="Title" class="required"></label>
                <input asp-for="Title" type="text" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
        </div>
        <div class="row form-group pl-2 pr-2">
            <div class="col-md-12">
                <label asp-for="Description"></label>
                <textarea asp-for="Description" type="text" rows="2" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
        </div>
        <div class="row form-group pl-2 pr-2 pt-2">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6 d-flex justify-content-start">
                        <label asp-for="FormFile" class="required">@Resource.Document</label>
                    </div>
                    <div class="col-md-6 d-flex justify-content-end">
                        <span>@Resource.DocumentMaxFileSize: @Model.FileSize</span>
                    </div>
                </div>
                <div class="custom-file">
                    <input asp-for="FormFile" class="custom-file-input" onchange="get_name(this)" />
                    <label class="custom-file-label" id="lbl_browse">@Resource.Browse</label>
                    <span asp-validation-for="FormFile" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer modal-footer-uniform w-full justify-content-between">
        <button type="button" class="btn btn-bold btn-pure btn-secondary" data-bs-dismiss="modal">@Resource.Close</button>
        <button type="submit" class="btn btn-bold btn-pure btn-primary float-right">@Resource.Add</button>
    </div>
</form>

<script>
    $(document).ready(function () {
        $.validator.setDefaults({ ignore: '' });
        var form = $('#frm_create_document');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);

        $(".select2").select2({
            width: "100%",
            language: {
                noResults: function () {
                    return '@Html.Raw(Resource.NoResultsFound)';
                },
            }
        });

        $('#StaffId').select2({
            width: "100%",
            language: {
                noResults: function () {
                    return '@Html.Raw(Resource.NoResultsFound)';
                },
                searching: function () {
                    return '@Html.Raw(Resource.Searching)';
                },
            },
            ajax: {
                url: '@Url.Action("GetStaff")',
                type: 'post',
                datatype: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        name: params.term,
                        __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                    };
                },
                processResults: function (response) {
                    return {
                        results: response
                    };
                },
                catch: true
            },
            templateResult: format_repo,
            templateSelection: format_repo_selection
        });
    });

    function get_name(e) {
        $("#lbl_browse").text(e.value);
    }

    function success_create_document(data) {
        handle_success(data, SubmitPathType.RELOAD, "");
    }
</script>