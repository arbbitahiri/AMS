@using AMS.Models.Staff
@model DocumentsVM
@{
    ViewData["Title"] = Resource.SecondStepStaffRegistration;
    Layout = "~/Views/Staff/_Layout.cshtml";

    var documents = Model.DocumentCount == 1 ? Resource.Documents.ToLower().Substring(0, Resource.Documents.Length - 1) : (Model.DocumentCount == 0 ? Resource.NoDocuments : Resource.Documents.ToLower());
}

<div class="flex-row-fluid">
    <div class="card border-0" style="box-shadow: none !important;">
        <div class="card-header d-flex justify-content-between border-0 p-0">
            <h3 class="card-title align-items-start flex-column">
                <span class="text-dark text-lg">@Model.StaffDetails.Firstname @Model.StaffDetails.Lastname</span><br />
                <span class="text-muted mt-1 font-weight-bold font-size-sm">
                    @if (Model.DocumentCount >= 1)
                    {
                        @Resource.Has <b class="text-primary">@Model.DocumentCount </b>
                    }
                    @documents
                </span>
            </h3>
            <div class="card-toolbar">
                <a onclick="add_document('@Model.StaffDetails.Ide')" class="btn btn-primary float-right">@Resource.AddDocument</a>
            </div>
        </div>
        <div class="card-body px-0 py-2">
            <table id="tbl_documents" class="table table-striped table-bordered table-hover w-full w-100 no-datatable">
                <thead>
                    <tr>
                        <th width="5%">#</th>
                        <th width="15%">@Resource.Title</th>
                        <th width="15%">@Resource.DocumentType</th>
                        <th class="text-center" data-orderable="false" width="15%">@Resource.Type</th>
                        <th class="text-center" data-orderable="false" width="15%">@Resource.Expires</th>
                        <th class="text-center" data-orderable="false" width="15%">@Resource.Download</th>
                        <th width="40%">@Resource.Description</th>
                        <th class="text-center" data-orderable="false" width="40%">@Resource.State</th>
                        <th width="10%" class="text-center" data-orderable="false">@Resource.Actions</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div class="d-flex justify-content-between border-top mt-5">
        <input type="button" value="@Resource.Back" onclick="go_back_registration('@Model.StaffDetails.Ide')" class="btn btn-light-primary font-weight-bolder text-uppercase mt-2 btn-lg" />
        <input type="button" value="@Resource.Continue" data-wizard-type="action-next" onclick="continue_to_department('@Model.StaffDetails.Ide')" class="btn btn-primary font-weight-bolder text-uppercase mt-2 btn-lg" />
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            if (@Model.StaffDetails.MethodType == MethodType.POST) {
                $('#f_tab').attr({ href: '', style: 'cursor: pointer' });
                $('#s_tab').attr({ href: '', style: '' });
                $('#t_tab').attr({ href: '', style: 'cursor: default' });

            } else {
                $('#f_tab').attr({ href: '@Url.Action("Register", "Staff")?ide=@Model.StaffDetails.Ide', style: "cursor: pointer" });
                $('#s_tab').attr({ href: '@Url.Action("Documents", "Staff")?ide=@Model.StaffDetails.Ide', style: "cursor: pointer" });
                $('#t_tab').attr({ href: '@Url.Action("Departments", "Staff")?ide=@Model.StaffDetails.Ide', style: "cursor: pointer" });
            }

            try {
                render_tbl_documents(@Json.Serialize(Model.Documents));
            } catch (ex) {
                console.log(ex);
            }
        });

        function go_back_registration(ide) {
            window.location.href = '@Url.Action("Register", "Staff")?ide=' + ide;
        }

        function continue_to_department(ide) {
            window.location.href = '@Url.Action("Departments", "Staff")?ide=' + ide;
        }

        function render_tbl_documents(data) {
            var rowCount = 1;
            $('#tbl_documents').DataTable({
                destroy: false,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 15,
                data: data,
                deferRender: true,
                columnDefs: [
                    { width: "5%", targets: [0, 3, 4, 5, 7, 8] },
                    { width: "15%", targets: [1, 2] },
                    { width: "40%", targets: [5] },
                    { className: "button-td text-center", targets: [3, 4, 5, 7, 8] },
                    { targets: "_all", defaultContent: "///" }
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            rowCount++;
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { data: "title" },
                    { data: "documentType" },
                    {
                        data: function (row, type, set) {
                            var img_path = row.fileType.includes('pdf') ? 'pdf' : (row.fileType.includes('xl') ? 'xls' : (row.fileType.includes('do') ? 'doc' : (row.fileType.includes('pp') ? 'ppt' : 'pdf')));

                            return '<div class="flex-shrink-0">' +
                                '<img src="/media/extensions/' + img_path + '.png" asp-append-version="true" class="max-h-25px" />' +
                                '</div>';
                        }
                    },
                    {
                        data: function (row, type, set) {
                            var label = row.expires ? 'danger' : 'success';
                            var text = row.expires ? '@Html.Raw(Resource.Yes)' : '@Html.Raw(Resource.No)';
                            return '<span class="label label-' + label + ' label-pill label-inline mr-2">' + text + '</span>';
                        }
                    },
                    {
                        data: function(row, type, set) {
                            return '<a onclick="download_document(\'' + row.staffDocumentIde + '\')" class="btn btn-icon btn-success btn-circle mr-2"><i class="fas fa-arrow-down"></i></a>'
                        }
                    },
                    {
                        data: function(row, type, set) {
                            var desc = '///';
                            if (row.description != null) {
                                if (row.description.length > 80) {
                                    desc = row.description.substring(0, 80) + '<span class="load-more" onclick="load_more(this)"><b>.. <a href="#' + rowCount + '">@Html.Raw(Resource.LookMore)</a></b></span><span class="d-none load-less-fst">' + row.description.substring(80) + '<span class="d-none load-less-snd" onclick="load_less(this)"><b> <a href="#' + rowCount + '">@Html.Raw(Resource.LookLess)</a></b></span></span>';
                                } else {
                                    desc = row.description ?? "///";
                                }
                            }
                            return desc;
                        }
                    },
                    {
                        data: function (row, type, set) {
                            return row.active ? '<small class="badge badge-success">@Html.Raw(Resource.Active)</small>' : '<small class="badge badge-danger">@Html.Raw(Resource.Passive)</small>';
                        }
                    },
                    {
                        data: function (row, type, set) {
                            var dropdown = '<div class="dropdown dropleft cursor-pointer">' +
                                '<button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu dropdown-grid" role="menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 29px, 0px); top: 0px; left: 0px; will-change: transform;">' +
                                '<button type="button" class="dropdown-item cursor-pointer" onclick="edit_document(\'' + row.staffDocumentIde + '\')">@Html.Raw(ActionButton.Edit.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Edit</span></button>';
                            if (row.active) {
                                dropdown += '<button type="button" class="dropdown-item cursor-pointer" onclick="download_document(\'' + row.staffDocumentIde + '\')">@Html.Raw(ActionButton.Delete.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Delete</span></button>';
                            }
                            dropdown += '</div></div>';
                            return dropdown;
                        }
                    }
                ]
            });
        }

        function load_more(e) {
            $(e).parent().find('.load-less-fst').removeClass('d-none');
            $(e).parent().parent().find('.load-less-snd').removeClass('d-none');
            $(e).addClass('d-none');
        }

        function load_less(e) {
            $(e).addClass('d-none');
            $(e).parent().addClass('d-none');
            $(e).parent().parent().find('.load-more').removeClass('d-none');
        }

        function add_document(ide) {
            $('#modal-large').find('.modal-content').load('@Url.Action("_AddDocument", "Staff")?ide=' + ide, function () {
                $('#modal-large').modal('toggle');
            });
        }

        function edit_document(ide) {
            $('#modal-large').find('.modal-content').load('@Url.Action("_EditDocument", "Staff")?ide=' + ide, function () {
                $('#modal-large').modal('toggle');
            });
        }

        function download_document(ide) {
            window.open('@Url.Action("Download", "Staff")?ide=' + ide, "_blank");
        }

        function delete_document(ide) {
            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteDocument)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("DeleteDocument", "Staff")', {
                        ide: ide,
                        __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                        }, function (data) {
                            handle_success(data, SubmitPathType.RELOAD, "");
                    });
                }
            });
        }
    </script>
}
