@using AMS.Models.Staff
@model DepartmentVM
@{
    ViewData["Title"] = Resource.ThirdStepStaffRegistration;
    Layout = "~/Views/Staff/_Layout.cshtml";
}

<div class="flex-row-fluid">
    <div class="card border-0" style="box-shadow: none !important;">
        <div class="card-header d-flex justify-content-between border-0 p-0">
            <h3 class="card-title align-items-start flex-column">
                <span class="text-dark text-lg">@Resource.ListOfDepartments</span>
            </h3>
            <div class="card-toolbar">
                <a onclick="add_department('@Model.StaffDetails.Ide')" class="btn btn-primary float-right">@Resource.AddDepartment</a>
            </div>
        </div>
        <div class="card-body px-0 py-2">
            <table id="tbl_departments" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>@Resource.Department</th>
                        <th>@Resource.StaffType</th>
                        <th>@Resource.StartDate</th>
                        <th>@Resource.EndDate</th>
                        <th class="text-center" data-orderable="false">@Resource.Actions</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>

    <div class="d-flex justify-content-between border-top mt-5">
        <input type="button" value="@Resource.Back" onclick="go_back_documents('@Model.StaffDetails.Ide')" class="btn btn-light-primary font-weight-bolder text-uppercase mt-2 btn-lg"/>
        <input type="button" value="@Resource.End" onclick="submit_form('@Model.StaffDetails.Ide')" class="btn btn-primary font-weight-bolder text-uppercase mt-2 btn-lg" />
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            if (@Model.MethodType == MethodType.POST) {
                $('#f_tab').attr({ href: '', style: 'cursor: pointer' });
                $('#s_tab').attr({ href: '', style: 'cursor: pointer' });
                $('#t_tab').attr({ href: '', style: '' });
            } else {
                $('#f_tab').attr({ href: '@Url.Action("Register", "Staff")?ide=@Model.StaffDetails.Ide', style: "cursor: pointer" });
                $('#s_tab').attr({ href: '@Url.Action("Documents", "Staff")?ide=@Model.StaffDetails.Ide', style: "cursor: pointer" });
                $('#t_tab').attr({ href: '@Url.Action("Departments", "Staff")?ide=@Model.StaffDetails.Ide', style: "cursor: pointer" });
            }

            render_tbl_departments(@Json.Serialize(Model.Departments));
        });

        function go_back_documents(ide) {
            window.location.href = '@Url.Action("Documents", "Staff")?ide=' + ide;
        }

        function submit_form(ide) {
            $.post('@Url.Action("Finish", "Staff")', {
                ide: ide,
                __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
            }, function(data) {
                if (data.status == ErrorStatus.SUCCESS) {
                    window.location.href = '@Url.Action("Index", "Staff")';
                } else {
                    Swal.fire({
                        title: "@Html.Raw(Resource.AreYouSure)",
                        text: "@Html.Raw(Resource.StaffNotComplete)",
                        icon: "question",
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: "@Resource.Yes",
                        cancelButtonText: "@Resource.No"
                    }).then((result) => {
                        if (result.value) {
                            window.location.href = '@Url.Action("Index", "Staff")';
                        }
                    });
                }
            });
        }

        function render_tbl_departments(data) {
            var rowCount = 1;
            $('#tbl_departments').DataTable({
                destroy: true,
                language: {
                    url: `/Culture/DataTable/${culture}.json`
                },
                keys: true,
                responsive: true,
                pageLength: 15,
                data: data,
                deferRender: true,
                columnDefs: [
                    { width: "5%", targets: [0, 5] },
                    { className: "button-td", targets: [5] },
                    { targets: "_all", defaultContent: "///" }
                ],
                order: [[0, "asc"]],
                columns: [
                    {
                        data: function (data, type, row, meta) {
                            rowCount++;
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    { data: "department" },
                    { data: "staffType" },
                    { data: "startDate" },
                    { data: "endDate" },
                    {
                        data: function (row, type, set) {
                            var date_time_now = new Date();
                            var end_date = new Date(Date.parse(row.endDate));
                            var active = end_date >= date_time_now ? true : false;

                            var dropdown = '<div class="dropdown dropleft cursor-pointer">' +
                                '<button type="button" class="btn btn-secondary btn-sm dropdown-toggle" data-toggle="dropdown">@Resource.Actions</button>' +
                                '<div class="dropdown-menu dropdown-grid" role="menu" x-placement="bottom-start" style="position: absolute; transform: translate3d(0px, 29px, 0px); top: 0px; left: 0px; will-change: transform;">' +
                                '<button type="button" class="dropdown-item cursor-pointer" onclick="edit_department(\'' + row.staffDepartmentIde + '\')">@Html.Raw(ActionButton.Edit.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Edit</span></button>';
                            if (active) {
                                dropdown += '<button type="button" class="dropdown-item cursor-pointer" onclick="delete_department(\'' + row.staffDepartmentIde + '\')">@Html.Raw(ActionButton.Delete.Replace("\'","\""))<span class="title" style="margin-top: 3px; margin-left: 10px;">@Resource.Delete</span></button>';
                            }
                                dropdown += '</div></div>';
                            return dropdown;
                        }
                    }
                ]
            });
        }

        function add_department(ide) {
            $('#modal-large').find('.modal-content').load('@Url.Action("_AddDepartment", "Staff")?ide=' + ide, function () {
                $('#modal-large').modal('toggle');
            });
        }

        function edit_department(ide) {
            $('#modal-large').find('.modal-content').load('@Url.Action("_EditDepartment", "Staff")?ide=' + ide, function () {
                $('#modal-large').modal('toggle');
            });
        }

        function delete_department(ide) {
            Swal.fire({
                title: "@Html.Raw(Resource.AreYouSure)",
                text: "@Html.Raw(Resource.SureYouWantToDeleteDepartmentForStaff)",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: "@Resource.Yes",
                cancelButtonText: "@Resource.No"
            }).then((result) => {
                if (result.value) {
                    $.post('@Url.Action("DeleteDepartment", "Staff")', {
                        ide: ide,
                        __RequestVerificationToken: $("[name='__RequestVerificationToken']").val()
                        }, function (data) {
                            handle_success(data, SubmitPathType.RELOAD, "");
                    });
                }
            });
        }
    </script>
}
